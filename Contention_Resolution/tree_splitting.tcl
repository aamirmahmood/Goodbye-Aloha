#This is the implementation of pure aloha which will contain a lot
#of packet drops. Just to prove aloha is a bad protocol and to prove
#that we have a better protocol with us.


#The number of arguments are 2(Excluding the script name. 1. MAC Protocol.)
if { $argc != 2 } {
  puts "Usage: ns $argv0 <number of nodes> <pure_aloha--1/slotted_aloha--2>"
  exit 0
}


#Check if the number of nodes entered is 0 or negative.
if { [lindex $argv 0] <= 0} {
  puts "Number of nodes cannot be negative. Exitting..."
  exit 0
}

global ns
set ns [new Simulator]

global macType
$ns rtproto DV


#Choose the MAC protocol depending on the option entered.
if { [lindex $argv 1] == 1} {
    $ns node-config -macType Mac/Sat/UnslottedAloha
} elseif { [lindex $argv 1] == 2} {
  $ns node-config -macType Mac/Sat/SlottedAloha
} else {
  puts "Invalid option for MAC Protocol has been chosen. Exiting..."
  exit 0
}

set node_count [lindex $argv 0]


#Open namfile and tracefile .
set tracefile [open highdrop_aloha.tr w]
$ns trace-all $tracefile

set namfile [open highdrop_aloha.nam w]
$ns namtrace-all $namfile



#This is the "finish" Procedure which is executed after the simulation is done.
proc finish { } {
  global ns tracefile namfile
  $ns flush-trace
  close $tracefile
  close $namfile
  exit 0
}


#This "hub" node is the centre of our star topology.
set hub [$ns node]
set udp100 [new Agent/UDP]
$ns attach-agent $hub $udp100


#Setting the hub as a CBR device is not a good idea. It is at the center and should receive all the data generated by all other devices.

#set cbr100 [new Application/Traffic/CBR]
#$cbr100 attach-agent $udp100
#$cbr100 set packetSize_ 500
#$cbr100 set interval_ 0.005

#Setting the hub as a traffic sink and trying.
set null100 [new Agent/Null]
ns attach-agent $hub $null100
ns connect $udp100 $null100



#Create 100 nodes in the topology.
#Set the network configuration of the "node_count" number of nodes.

set n []
set udp []
set cbr []

for { set i 0 } { $i < $node_count } { incr i} {

#Create the node. Create the link between the hub and node.
  lappend n [$ns node]
  $ns duplex-link [lindex $n $i] $hub 10Mb 1ms DropTail

#Create a transport layer agent. Attach that protocol/agent with the node.
  lappend udp [new Agent/UDP]
  $ns attach-agent [lindex $n $i ] [lindex $udp $i]

#Create an application layer agent.Attach it to transport layer protocol.
  lappend cbr [new Application/Traffic/CBR]
  [lindex $cbr $i] attach-agent [lindex $udp $i]

#Set attributes.
  [lindex $cbr $i] set packetSize_ 500
  [lindex $cbr $i] set interval_ 0.05

  $ns connect [lindex $udp $i] $udp100

#  puts "$i - [lindex $cbr $i]"
}

#Schedule the events for the CBR agent and network dynamics.
#This is the place where we can make it get high packet drops.

$ns at 0.5 "[lindex $cbr 15] start"
$ns at 0.5 "[lindex $cbr 27] start"
$ns at 1.0 "[lindex $cbr 38] start"
$ns at 2.0 "[lindex $cbr 51] start"
$ns at 3.0 "[lindex $cbr 63] start"
$ns at 4.0 "[lindex $cbr 89] start"

$ns at 5.0 "[lindex $cbr 15] stop"
$ns at 5.0 "[lindex $cbr 27] stop"
$ns at 5.0 "[lindex $cbr 38] stop"
$ns at 5.0 "[lindex $cbr 51] stop"
$ns at 5.0 "[lindex $cbr 63] stop"
$ns at 5.0 "[lindex $cbr 89] stop"


#At the end , call the finish routine.
$ns at 6.0 "finish"

#Run the simulation.
$ns run
